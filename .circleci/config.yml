version: 2
orbs:
    aws-ecs: circleci/aws-ecs@0.0.11

jobs:  
  # The build job
  build:
    working_directory: ~/go/src/ecr-proc
    docker:
      - image: circleci/golang:latest
    environment:
      AWS_ACCOUNT_ID: "545622740090"
      AWS_DEFAULT_REGION: "ap-south-1"
      AWS_RESOURCE_NAME_PREFIX: "ecr-poc"
      #AWS_ACCESS_KEY_ID: "AKIAX6CNGJR5E4S34KN3"
      #AWS_SECRET_ACCESS_KEY: "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"
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      - setup_remote_docker
      - run:
          name: common environment variables
          command: |
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}"' >> $BASH_ENV     
      - run:
          name: Build project and run tests against predefined payloads
          command: |
            docker build -t $FULL_IMAGE_NAME:latest .
      - run:
          name: Save image to an archive
          command: |
            mkdir docker-image
            docker save -o docker-image/image.tar $FULL_IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - docker-image
      # Push docker image to ECR
      #- run:
       #   name: Push image
        #  command: |
         #   . venv/bin/activate
          #  eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
           # docker tag $FULL_IMAGE_NAME:latest 
            # docker push $FULL_IMAGE_NAME:latest 
     
  # The deploy job
  deploy:
    working_directory: ~/go/src/ecr-proc
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_ACCOUNT_ID: "545622740090"
      AWS_DEFAULT_REGION: "ap-south-1"
      ECR_REPOSITORY_NAME: "ecr-poc"
    steps:
      # Checkout the code from the branch into the working_directory
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: workspace
      # Log the current branch
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Install AWS cli
      - run:
          name: Install aws cli
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo pip install awscli --upgrade
      - run:
          name: setup common environment variables
          command: |
              echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${ECR_REPOSITORY_NAME}"' >> $BASH_ENV
            # echo 'export IMAGE_TAG_NAME="${CIRCLE_BRANCH}-$(date +%Y%m%d%H%M%S)"' >>  $BASH_ENV 
      # Load the docker image from the workspace
      - run:
          name: Load image
          command: |
            docker load --input workspace/docker-image/image.tar
      # Push docker image to ECR
      - run:
          name: Push image and force deploy with latest tag
          command: |
            . venv/bin/activate
            eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
            docker push $FULL_IMAGE_NAME:latest
            aws ecs update-service --cluster exclcloud-customer-proc --service demo-nginx-service-dev --force-new-deployment
            
workflows:
  version: 2
  # The build and deploy workflow
  build_and_deploy:
    jobs:
      - build: 
          requires:
            - test
      - deploy:
          context: Deployment
          requires:
            - build
          filters:
            branches:
              only:
                - master

